# Flujo de trabajo para aprender sobre DevOps, GitHub Actions y comandos en .yml
name: flujo-investigacion-devops

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  configuracion-y-lint:
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - name: Clonar repositorio
        uses: actions/checkout@v4

      # Configurar Python e instalar Pylint
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Instalar Pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint

      # Ejecutar Pylint y guardar los resultados
      - name: Ejecutar Pylint
        run: pylint . > pylint-report.txt
      - name: Subir reporte de Pylint
        uses: actions/upload-artifact@v3
        with:
          name: pylint-report
          path: pylint-report.txt

      # Ejecutar el script de Python para probar su ejecución
      - name: Ejecutar main.py
        run: python main.py

  construir-y-probar:
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - name: Clonar repositorio
        uses: actions/checkout@v4

      # Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      
      # Instalar y ejecutar pruebas
      - name: Instalar dependencias
        run: npm install
      - name: Ejecutar pruebas
        run: npm test

  probar-python:
    runs-on: ubuntu-latest
    steps:
      # Clonar el repositorio
      - name: Clonar repositorio
        uses: actions/checkout@v4

      # Configurar Python e instalar dependencias
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Instalar dependencias de prueba
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      # Ejecutar pruebas de Python
      - name: Ejecutar pruebas de Python
        run: pytest > pytest-results.txt
      
      # Subir resultados de las pruebas como artefacto
      - name: Subir resultados de Pytest
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: pytest-results.txt

  desplegar-en-entorno:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      # Clonar el repositorio
      - name: Clonar repositorio
        uses: actions/checkout@v4

      # Desplegar en un entorno simulado
      - name: Desplegar en entorno de staging
        run: |
          echo "Desplegando en el entorno de staging..."
          echo "¡Despliegue exitoso!"
